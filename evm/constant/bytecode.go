package constant

/*
pragma solidity 0.6.12;

interface IERC20 {
    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);
}

contract BatchTransfer {
    function batchTransferOKT(address[] calldata _tos, uint256 _amount) public payable {
        for (uint256 i = 0; i < _tos.length; i++) {
            (bool sent, bytes memory data) = payable(_tos[i]).call{value: _amount}("");
            require(sent, "Failed to send native token");
        }
    }

    function batchTransferERC20(address[] calldata _tos, address token, uint256 _amount) public {
        for (uint256 i = 0; i < _tos.length; i++) {
            bool sent = IERC20(token).transferFrom(msg.sender, _tos[i], _amount);
            require(sent, "Failed to send native token");
        }
    }
}
*/
const BatchTransferHex = "608060405234801561001057600080fd5b50610206806100206000396000f3fe60806040526004361061001e5760003560e01c806395f709d914610023575b600080fd5b6100a46004803603604081101561003957600080fd5b810190808035906020019064010000000081111561005657600080fd5b82018360208201111561006857600080fd5b8035906020019184602083028401116401000000008311171561008a57600080fd5b9091929391929390803590602001909291905050506100a6565b005b60005b838390508110156101ca57600060608585848181106100c457fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168460405180600001905060006040518083038185875af1925050503d806000811461013e576040519150601f19603f3d011682016040523d82523d6000602084013e610143565b606091505b5091509150816101bb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4661696c656420746f2073656e64206e617469766520746f6b656e000000000081525060200191505060405180910390fd5b505080806001019150506100a9565b5050505056fea2646970667358221220e11ab6a40a29e9beb0ef191322e31f97ebb3da7677954a71e9cb97b76009c25b64736f6c634300060c0033"
